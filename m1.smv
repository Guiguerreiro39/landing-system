MODULE main

VAR
    -- 'button' representa o estado do botão, o qual depende da ação do piloto. 
    button: {down, up};

    -- 'phase' representa o estado do sistema de aterragem.
    phase: {haltDown, movingUp, haltUp, movingDown};

ASSIGN
    init(button) := up;
    init(phase) := haltUp;

    -- Após o estado inicial, 'button' pode tomar qualquer um dos valores cima/baixo.

    next(phase) := case phase = movingDown & next(button) = down: haltDown;
                        phase = movingUp & next(button) = up: haltUp;

                        phase in {movingDown, haltDown} & next(button) = up: movingUp;
                        phase in {movingUp, haltUp} & next(button) = down: movingDown;

                        TRUE: phase;
                    esac;

LTLSPEC
    -- R11bis: Para todos os estado, se o botão estiver para baixo e continuar para baixo, 
    -- então eventualmente vamos chegar à fase haltDown
    G (button = down & next(button) = down -> F phase = haltDown)

LTLSPEC
    -- R12bis: Para todos os estados, se o botão estiver para cima e continuar para cima,
    -- então eventualmente vamos chegar à fase haltUp
    G (button = up & next(button) = up -> F phase = haltUp)

LTLSPEC
    -- Inv3: Para todos os estados em que a fase é 'movingUp', o botão está para cima
    G (phase = movingUp -> button = up)

LTLSPEC
    -- Inv4: Para todos os estados em que a fase é 'movingDown', o botão está para baixo
    G (phase = movingDown -> button = down)

LTLSPEC
    -- Inv5: Para todos os estados em que o botão está para baixo, a fase não é nem
    -- 'movingUp' nem 'haltUp'.
    G (button = down -> phase != movingUp & phase != haltUp)

LTLSPEC
    -- Inv6: Para todos os estados em que o botão está para cima, a fase não é nem
    -- 'movingDown' nem 'haltDown'
    G (button = up -> phase != movingDown & phase != haltDown)
