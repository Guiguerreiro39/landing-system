MODULE main

VAR
    button: {down, up};
    phase: {haltDown, movingUp, haltUp, movingDown};

ASSIGN
    init(button) := up;
    init(phase) := haltUp;

    next(phase) := case phase = haltUp & next(button) = down: movingDown;
                        phase = haltDown & next(button) = up: movingUp;

                        phase = movingDown & next(button) = down: haltDown;
                        phase = movingUp & next(button) = up: haltUp;

                        phase = movingDown & next(button) = up: movingUp;
                        phase = movingUp & next(button) = down: movingDown;

                        TRUE: phase;
                    esac;

-- R11bis
LTLSPEC
    G (button = down & next(button) = down -> F phase = haltDown)
-- R12bis
LTLSPEC
    G (button = up & next(button) = up -> F phase = haltUp)
-- R21
LTLSPEC
    G (button = down -> phase != movingUp & phase != haltUp)
-- R22
LTLSPEC
    G (button = up -> phase != movingDown & phase != haltDown)
LTLSPEC
    G (phase = movingUp -> button = up)
LTLSPEC
    G (phase = movingDown -> button = down)
